// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COLABORADOR
  PROFESSOR
  JOGADOR
}

enum Genre {
  MASCULINO
  FEMININO
  NAO_INFORMADO
}

model Users {
  id             String    @id @default(uuid())
  googleId       String?   @unique @db.VarChar(30) @map("google_id")
  microsoftId    String?   @unique @db.VarChar(45) @map("microsoft_id")
  facebookId     String?   @unique @db.VarChar(25) @map("facebook_id")
  email          String    @unique @db.VarChar(100)
  password       String?   @db.VarChar(80)
  role           Role      @default(JOGADOR)
  newsletter     Boolean   @default(false)
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)

  profile        Profile?
}

model Profile {
  id             String    @id @default(uuid())
  userId         String    @unique @map("user_id")
  name           String    @db.VarChar(255)
  username       String    @unique @db.VarChar(40)
  avatarUrl      String?   @db.VarChar(255)  @map("avatar_url")
  genre          Genre     @default(NAO_INFORMADO)
  birthDate      String?   @db.VarChar(12) @map("birth_date")
  country        String?   @db.VarChar(120)
  region         String?   @db.VarChar(120)
  city           String?   @db.VarChar(120)
  phone          String?   @db.VarChar(22)

  user           Users      @relation(fields: [userId], references: [id])
}


model OAuthToken {
  id           Int      @id @default(autoincrement())
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("oauth-token")
}

model ResetPasswordTokens {
  id             String    @id @default(uuid())
  userId         String    @map("user_id")
  token          String
  expiresAt      DateTime  @map("expires_at")
  used           Boolean   @default(false)
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("reset_password_tokens")
}
